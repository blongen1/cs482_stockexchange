@using stockExchange.Extensions
@model stockExchange.ViewModels.DetailsViewModel

@{
    ViewBag.Title = Model.Stocks.CompanyName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Stocks.CompanyName - $@Model.Stocks.CurrentPrice</h2>

<h3>You currently have: $@string.Format("{0:n}", Convert.ToDouble(User.Identity.GetCash()))</h3>

@if (TempData["error"] != null)
{
    <p class="alert alert-danger" id="errorMessage">@TempData["error"]</p>
}

<canvas id="myChart" width="400" height="100"></canvas>

@using (Html.BeginForm("Buy", "Portfolio"))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Portfolio.Amount)
        @Html.TextBoxFor(m => m.Portfolio.Amount, new { @class = "form-control"})
    </div>

    <div class="form-group">
        @Html.HiddenFor(m => m.Portfolio.Price, new {Value = Model.Stocks.CurrentPrice})
        @Html.HiddenFor(m => m.Portfolio.Symbol, new {Value = Model.Stocks.Symbol})
    </div>
    
    <button type="submit" class="btn btn-primary">Buy</button>
}


@if (Model.AmountOwned != 0)
{
    using (Html.BeginForm("Sell", "Portfolio"))
     {
         <h3>You currently own @Model.AmountOwned stocks of @Model.Stocks.Symbol</h3>
         <div class="form-group">
             @Html.LabelFor(m => m.Portfolio.Amount)
             @Html.TextBoxFor(m => m.Portfolio.Amount, new { @class = "form-control"})
         </div>

         <div class="form-group">
             @Html.HiddenFor(m => m.Portfolio.Price, new {Value = Model.Stocks.CurrentPrice})
             @Html.HiddenFor(m => m.Portfolio.Symbol, new {Value = Model.Stocks.Symbol})
         </div>
    
         <button type="submit" class="btn btn-primary">Sell</button>
     }
}

<br>
<p><a href="." class="btn btn-primary btn-lg">Return to Stocks</a></p>

@section scripts
{
    <script type="text/javascript">

        var ctx = document.getElementById("myChart").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ["9:30am", "9:45am", "10:00am", "10:15am", "10:30am", "10:45am", "11:00am", "11:15am", "11:30am", "11:45am", "12:00pm", "12:15pm", "12:30pm", "12:45pm",
                    "1:00pm", "1:15pm", "1:30pm", "1:45pm", "2:00pm", "2:15pm", "2:30pm", "2:45pm", "3:00pm", "3:15pm", "3:30pm", "3:45pm", "4:00pm"],
                datasets: [{
                    label: 'Stock Price',
                    data: @Html.Raw(Json.Encode(@Model.DayPrices)),
                    backgroundColor: [
                        'rgba(30, 144, 255, 0.2)'
                    ],
                    borderColor: [
                        'rgba(30, 144, 225, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                tooltips: {
                    model: 'label',
                    callbacks: {
                        label: function(tooltipItem, data) {
                            return 'Price: $' + data['datasets'][0]['data'][tooltipItem['index']].toFixed(2);
                        }
                    }
                },
                scales: {
                    yAxes: [
                        {
                            ticks: {
                            }
                        }
                    ]
                }
            }
        });

    </script>
}